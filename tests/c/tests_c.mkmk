# Copyright 2014 the Neutrino authors (see AUTHORS).
# Licensed under the Apache License, Version 2.0 (see LICENSE).

import re

test_file_names = [
  "test_callback.cc",
  "test_mutex.cc",
  "test_ook.cc",
  "test_semaphore.cc",
  "test_stdc.cc",
  "test_string.cc",
  "test_thread.cc"
]

# Compile a single test file, ensuring that the include paths are hooked up
# right.
def compile_test_file(source):
  # Include the C sources.
  source.add_include(get_root().get_child('src', 'c'))
  return source.get_object()

# Create a group containing the test files along with the runtime library.
test_library = get_group("library")
test_library.add_dependency(get_external('src', 'c', 'utils', 'library'))
test_library.add_dependency(get_external('src', 'c', 'sync', 'library'))
test_library.add_dependency(get_external('src', 'c', 'test', 'library'))
test_library.add_dependency(get_external('src', 'c', 'test', 'stderr-fail'))

# Compile the test source files.
for test_file_name in test_file_names:
  test_file = c.get_source_file(test_file_name)
  object_file = compile_test_file(test_file)
  test_library.add_member(object_file)

# Compile the test main executable.
test_main = c.get_executable("main")
test_main.add_object(test_library)

run_tests = add_alias("run-tests")

# Add targets to run the test cases.
for test_file_name in test_file_names:
  test_case = test.get_exec_test_case(test_file_name)
  test_case.set_runner(test_main)
  stripped_test_case_name = re.match(r"test_(\w+).c", test_file_name).group(1)
  test_case.set_arguments(stripped_test_case_name)
  run_tests.add_member(test_case)
